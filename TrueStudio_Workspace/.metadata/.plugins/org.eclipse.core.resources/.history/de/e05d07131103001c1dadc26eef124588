/*
 * uart.c
 *
 *  Created on: 2021. 8. 22.
 *      Author: Marshall
 */

#include <stdarg.h>
#include "core/qbuffer.h"
#include "uart.h"

#define UART_MODE_POLLING   0
#define UART_MODE_INTERRUPT 1
#define UART_MODE_DMA       2

#define UART_RX_BUF_LENGTH  16
#define UART_RX_QBUF_LENGTH 256

typedef struct
{
  bool  is_open;
  uint32_t baud;
  uint8_t tx_mode;
  uint8_t rx_mode;

  uint8_t rx_buf[UART_RX_BUF_LENGTH];
  qbuffer_t qbuffer_rx;

  UART_HandleTypeDef handle;

} uart_t;

uart_t uart_tbl[UART_MAX_CH];
uint8_t uart_rxqbuf[uART_MAX_CH][UART_RX_BUF_LENGTH];

static void uartStartRx(uint8_t channel);
static void uartRxHandler(uint8_t channel);

void uartInit(void)
{

}

bool uartOpen(uint8_t channel, uint32_t baud)
{

}

bool uartClose(uint8_t channel)
{

}

uint32_t uartAvailable(uint8_t channel)
{

}

void uartFlush(uint8_t channel)
{

}

void uartPutch(uint8_t channel, uint8_t ch)
{

}

uint8_t uartGetch(uint8_t channel)
{

}

int32_t uartWrite(uint8_t channel, uint8_t p_data, uint32_t length)
{

}

uint8_t uartRead(uint8_t channel)
{

}

int32_t uartPrintf(uint8_t channel, const char *fmt, ...)
{

}
